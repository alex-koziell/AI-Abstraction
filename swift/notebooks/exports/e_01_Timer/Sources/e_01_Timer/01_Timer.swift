/*
THIS FILE WAS AUTOGENERATED! DO NOT EDIT!
file to edit: 01_Timer.ipynb

*/



import Dispatch

public func time(repetitions: Int = 1, _ f: () -> ()) {
    guard repetitions > 0 else { 
        print("`repetitions` must be a positive integer!")
        return 
    }
    
    // Warmup
    if repetitions > 1 { f() }
    
    var times = [Double]()
    for _ in 1...repetitions {
        let start = DispatchTime.now()
        f()
        let end = DispatchTime.now()
        let nanoseconds = Double(end.uptimeNanoseconds - start.uptimeNanoseconds)
        let milliseconds = nanoseconds / 1e6
        times.append(milliseconds)
    }
    print("average: \(times.reduce(0.0, +)/Double(times.count)) ms,   " +
          "min: \(times.reduce(times[0], min)) ms,   " +
          "max: \(times.reduce(times[0], max)) ms")
}
